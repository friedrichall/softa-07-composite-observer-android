plugins {
	id("com.android.application")
	id("de.mannodermaus.android-junit5")
}

android {
    compileSdkVersion 30
    defaultConfig {
        testInstrumentationRunnerArguments
        applicationId "de.thro.inf.prg3.a07"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // (Required) Connect JUnit 5 to the runner
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
	compileOptions {
		setSourceCompatibility(JavaVersion.VERSION_1_8)
		setTargetCompatibility(JavaVersion.VERSION_1_8)
	}

	packagingOptions {
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/LICENSE.md'
		exclude 'META-INF/license.txt'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/notice.txt'
		exclude 'META-INF/ASL2.0'
	}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    /* Apache commons lang3 - used for StringBuilder, HashcodeBuilder, and so on */
    implementation "org.apache.commons:commons-lang3:$commons_lang3_version"

    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5_version}"

	// (Optional) If you also have JUnit 4-based tests
	testImplementation "junit:junit:4.13.2"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit5_version}"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit5_version}"

    // (Required) Writing tests for JUnit Jupiter
	androidTestImplementation("androidx.test:runner:1.3.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:${junit5_version}")

    // (Required) The instrumentation test companion library
	androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.2")
	androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.2")
}
